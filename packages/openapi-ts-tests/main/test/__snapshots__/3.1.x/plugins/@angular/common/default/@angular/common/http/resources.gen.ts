// This file is auto-generated by @hey-api/openapi-ts

import type { Options } from '../../../sdk.gen';
import type { ExportData, PatchApiVbyApiVersionNoTagData, ImportData, ImportResponse, FooWowData, ApiVVersionODataControllerCountData, ApiVVersionODataControllerCountResponse, GetApiVbyApiVersionSimpleOperationData, GetApiVbyApiVersionSimpleOperationResponse, DeleteCallWithoutParametersAndResponseData, GetCallWithoutParametersAndResponseData, HeadCallWithoutParametersAndResponseData, OptionsCallWithoutParametersAndResponseData, PatchCallWithoutParametersAndResponseData, PostCallWithoutParametersAndResponseData, PutCallWithoutParametersAndResponseData, DeleteFooData3 as DeleteFooData, CallWithDescriptionsData, DeprecatedCallData, CallWithParametersData, CallWithWeirdParameterNamesData, GetCallWithOptionalParamData, PostCallWithOptionalParamData, PostCallWithOptionalParamResponse, PostApiVbyApiVersionRequestBodyData, PostApiVbyApiVersionFormDataData, CallWithDefaultParametersData, CallWithDefaultOptionalParametersData, CallToTestOrderOfParamsData, DuplicateNameData, DuplicateName2Data, DuplicateName3Data, DuplicateName4Data, CallWithNoContentResponseData, CallWithNoContentResponseResponse, CallWithResponseAndNoContentResponseData, CallWithResponseAndNoContentResponseResponse, DummyAData, DummyAResponse, DummyBData, DummyBResponse, CallWithResponseData, CallWithResponseResponse, CallWithDuplicateResponsesData, CallWithDuplicateResponsesResponse, CallWithResponsesData, CallWithResponsesResponse, CollectionFormatData, TypesData, TypesResponse, UploadFileData, UploadFileResponse, FileResponseData, FileResponseResponse, ComplexTypesData, ComplexTypesResponse, MultipartResponseData, MultipartResponseResponse, MultipartRequestData, ComplexParamsData, ComplexParamsResponse, CallWithResultFromHeaderData, TestErrorCodeData, NonAsciiæøåÆøÅöôêÊ字符串Data, NonAsciiæøåÆøÅöôêÊ字符串Response, PutWithFormUrlEncodedData } from '../../../types.gen';
import { httpResource } from '@angular/common/http';
import { exportRequest, patchApiVbyApiVersionNoTagRequest, importRequest, fooWowRequest, apiVVersionODataControllerCountRequest, getApiVbyApiVersionSimpleOperationRequest, deleteCallWithoutParametersAndResponseRequest, getCallWithoutParametersAndResponseRequest, headCallWithoutParametersAndResponseRequest, optionsCallWithoutParametersAndResponseRequest, patchCallWithoutParametersAndResponseRequest, postCallWithoutParametersAndResponseRequest, putCallWithoutParametersAndResponseRequest, deleteFooRequest, callWithDescriptionsRequest, deprecatedCallRequest, callWithParametersRequest, callWithWeirdParameterNamesRequest, getCallWithOptionalParamRequest, postCallWithOptionalParamRequest, postApiVbyApiVersionRequestBodyRequest, postApiVbyApiVersionFormDataRequest, callWithDefaultParametersRequest, callWithDefaultOptionalParametersRequest, callToTestOrderOfParamsRequest, duplicateNameRequest, duplicateName2Request, duplicateName3Request, duplicateName4Request, callWithNoContentResponseRequest, callWithResponseAndNoContentResponseRequest, dummyARequest, dummyBRequest, callWithResponseRequest, callWithDuplicateResponsesRequest, callWithResponsesRequest, collectionFormatRequest, typesRequest, uploadFileRequest, fileResponseRequest, complexTypesRequest, multipartResponseRequest, multipartRequestRequest, complexParamsRequest, callWithResultFromHeaderRequest, testErrorCodeRequest, nonAsciiæøåÆøÅöôêÊ字符串Request, putWithFormUrlEncodedRequest } from './requests.gen';

export const exportResource = <ThrowOnError extends boolean = false>(options?: () => Options<ExportData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? exportRequest(opts) : undefined;
    });
};

export const patchApiVbyApiVersionNoTagResource = <ThrowOnError extends boolean = false>(options?: () => Options<PatchApiVbyApiVersionNoTagData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? patchApiVbyApiVersionNoTagRequest(opts) : undefined;
    });
};

export const importResource = <ThrowOnError extends boolean = false>(options: () => Options<ImportData, ThrowOnError> | undefined) => {
    return httpResource<ImportResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? importRequest(opts) : undefined;
    });
};

export const fooWowResource = <ThrowOnError extends boolean = false>(options?: () => Options<FooWowData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? fooWowRequest(opts) : undefined;
    });
};

export const apiVVersionODataControllerCountResource = <ThrowOnError extends boolean = false>(options?: () => Options<ApiVVersionODataControllerCountData, ThrowOnError> | undefined) => {
    return httpResource<ApiVVersionODataControllerCountResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? apiVVersionODataControllerCountRequest(opts) : undefined;
    });
};

export const getApiVbyApiVersionSimpleOperationResource = <ThrowOnError extends boolean = false>(options: () => Options<GetApiVbyApiVersionSimpleOperationData, ThrowOnError> | undefined) => {
    return httpResource<GetApiVbyApiVersionSimpleOperationResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? getApiVbyApiVersionSimpleOperationRequest(opts) : undefined;
    });
};

export const deleteCallWithoutParametersAndResponseResource = <ThrowOnError extends boolean = false>(options?: () => Options<DeleteCallWithoutParametersAndResponseData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? deleteCallWithoutParametersAndResponseRequest(opts) : undefined;
    });
};

export const getCallWithoutParametersAndResponseResource = <ThrowOnError extends boolean = false>(options?: () => Options<GetCallWithoutParametersAndResponseData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? getCallWithoutParametersAndResponseRequest(opts) : undefined;
    });
};

export const headCallWithoutParametersAndResponseResource = <ThrowOnError extends boolean = false>(options?: () => Options<HeadCallWithoutParametersAndResponseData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? headCallWithoutParametersAndResponseRequest(opts) : undefined;
    });
};

export const optionsCallWithoutParametersAndResponseResource = <ThrowOnError extends boolean = false>(options?: () => Options<OptionsCallWithoutParametersAndResponseData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? optionsCallWithoutParametersAndResponseRequest(opts) : undefined;
    });
};

export const patchCallWithoutParametersAndResponseResource = <ThrowOnError extends boolean = false>(options?: () => Options<PatchCallWithoutParametersAndResponseData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? patchCallWithoutParametersAndResponseRequest(opts) : undefined;
    });
};

export const postCallWithoutParametersAndResponseResource = <ThrowOnError extends boolean = false>(options?: () => Options<PostCallWithoutParametersAndResponseData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? postCallWithoutParametersAndResponseRequest(opts) : undefined;
    });
};

export const putCallWithoutParametersAndResponseResource = <ThrowOnError extends boolean = false>(options?: () => Options<PutCallWithoutParametersAndResponseData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? putCallWithoutParametersAndResponseRequest(opts) : undefined;
    });
};

export const deleteFooResource = <ThrowOnError extends boolean = false>(options: () => Options<DeleteFooData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? deleteFooRequest(opts) : undefined;
    });
};

export const callWithDescriptionsResource = <ThrowOnError extends boolean = false>(options?: () => Options<CallWithDescriptionsData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? callWithDescriptionsRequest(opts) : undefined;
    });
};

/**
 * @deprecated
 */
export const deprecatedCallResource = <ThrowOnError extends boolean = false>(options: () => Options<DeprecatedCallData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? deprecatedCallRequest(opts) : undefined;
    });
};

export const callWithParametersResource = <ThrowOnError extends boolean = false>(options: () => Options<CallWithParametersData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? callWithParametersRequest(opts) : undefined;
    });
};

export const callWithWeirdParameterNamesResource = <ThrowOnError extends boolean = false>(options: () => Options<CallWithWeirdParameterNamesData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? callWithWeirdParameterNamesRequest(opts) : undefined;
    });
};

export const getCallWithOptionalParamResource = <ThrowOnError extends boolean = false>(options: () => Options<GetCallWithOptionalParamData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? getCallWithOptionalParamRequest(opts) : undefined;
    });
};

export const postCallWithOptionalParamResource = <ThrowOnError extends boolean = false>(options: () => Options<PostCallWithOptionalParamData, ThrowOnError> | undefined) => {
    return httpResource<PostCallWithOptionalParamResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? postCallWithOptionalParamRequest(opts) : undefined;
    });
};

export const postApiVbyApiVersionRequestBodyResource = <ThrowOnError extends boolean = false>(options?: () => Options<PostApiVbyApiVersionRequestBodyData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? postApiVbyApiVersionRequestBodyRequest(opts) : undefined;
    });
};

export const postApiVbyApiVersionFormDataResource = <ThrowOnError extends boolean = false>(options?: () => Options<PostApiVbyApiVersionFormDataData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? postApiVbyApiVersionFormDataRequest(opts) : undefined;
    });
};

export const callWithDefaultParametersResource = <ThrowOnError extends boolean = false>(options?: () => Options<CallWithDefaultParametersData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? callWithDefaultParametersRequest(opts) : undefined;
    });
};

export const callWithDefaultOptionalParametersResource = <ThrowOnError extends boolean = false>(options?: () => Options<CallWithDefaultOptionalParametersData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? callWithDefaultOptionalParametersRequest(opts) : undefined;
    });
};

export const callToTestOrderOfParamsResource = <ThrowOnError extends boolean = false>(options: () => Options<CallToTestOrderOfParamsData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? callToTestOrderOfParamsRequest(opts) : undefined;
    });
};

export const duplicateNameResource = <ThrowOnError extends boolean = false>(options?: () => Options<DuplicateNameData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? duplicateNameRequest(opts) : undefined;
    });
};

export const duplicateName2Resource = <ThrowOnError extends boolean = false>(options?: () => Options<DuplicateName2Data, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? duplicateName2Request(opts) : undefined;
    });
};

export const duplicateName3Resource = <ThrowOnError extends boolean = false>(options?: () => Options<DuplicateName3Data, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? duplicateName3Request(opts) : undefined;
    });
};

export const duplicateName4Resource = <ThrowOnError extends boolean = false>(options?: () => Options<DuplicateName4Data, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? duplicateName4Request(opts) : undefined;
    });
};

export const callWithNoContentResponseResource = <ThrowOnError extends boolean = false>(options?: () => Options<CallWithNoContentResponseData, ThrowOnError> | undefined) => {
    return httpResource<CallWithNoContentResponseResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? callWithNoContentResponseRequest(opts) : undefined;
    });
};

export const callWithResponseAndNoContentResponseResource = <ThrowOnError extends boolean = false>(options?: () => Options<CallWithResponseAndNoContentResponseData, ThrowOnError> | undefined) => {
    return httpResource<CallWithResponseAndNoContentResponseResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? callWithResponseAndNoContentResponseRequest(opts) : undefined;
    });
};

export const dummyAResource = <ThrowOnError extends boolean = false>(options?: () => Options<DummyAData, ThrowOnError> | undefined) => {
    return httpResource<DummyAResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? dummyARequest(opts) : undefined;
    });
};

export const dummyBResource = <ThrowOnError extends boolean = false>(options?: () => Options<DummyBData, ThrowOnError> | undefined) => {
    return httpResource<DummyBResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? dummyBRequest(opts) : undefined;
    });
};

export const callWithResponseResource = <ThrowOnError extends boolean = false>(options?: () => Options<CallWithResponseData, ThrowOnError> | undefined) => {
    return httpResource<CallWithResponseResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? callWithResponseRequest(opts) : undefined;
    });
};

export const callWithDuplicateResponsesResource = <ThrowOnError extends boolean = false>(options?: () => Options<CallWithDuplicateResponsesData, ThrowOnError> | undefined) => {
    return httpResource<CallWithDuplicateResponsesResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? callWithDuplicateResponsesRequest(opts) : undefined;
    });
};

export const callWithResponsesResource = <ThrowOnError extends boolean = false>(options?: () => Options<CallWithResponsesData, ThrowOnError> | undefined) => {
    return httpResource<CallWithResponsesResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? callWithResponsesRequest(opts) : undefined;
    });
};

export const collectionFormatResource = <ThrowOnError extends boolean = false>(options: () => Options<CollectionFormatData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? collectionFormatRequest(opts) : undefined;
    });
};

export const typesResource = <ThrowOnError extends boolean = false>(options: () => Options<TypesData, ThrowOnError> | undefined) => {
    return httpResource<TypesResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? typesRequest(opts) : undefined;
    });
};

export const uploadFileResource = <ThrowOnError extends boolean = false>(options: () => Options<UploadFileData, ThrowOnError> | undefined) => {
    return httpResource<UploadFileResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? uploadFileRequest(opts) : undefined;
    });
};

export const fileResponseResource = <ThrowOnError extends boolean = false>(options: () => Options<FileResponseData, ThrowOnError> | undefined) => {
    return httpResource<FileResponseResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? fileResponseRequest(opts) : undefined;
    });
};

export const complexTypesResource = <ThrowOnError extends boolean = false>(options: () => Options<ComplexTypesData, ThrowOnError> | undefined) => {
    return httpResource<ComplexTypesResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? complexTypesRequest(opts) : undefined;
    });
};

export const multipartResponseResource = <ThrowOnError extends boolean = false>(options?: () => Options<MultipartResponseData, ThrowOnError> | undefined) => {
    return httpResource<MultipartResponseResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? multipartResponseRequest(opts) : undefined;
    });
};

export const multipartRequestResource = <ThrowOnError extends boolean = false>(options?: () => Options<MultipartRequestData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? multipartRequestRequest(opts) : undefined;
    });
};

export const complexParamsResource = <ThrowOnError extends boolean = false>(options: () => Options<ComplexParamsData, ThrowOnError> | undefined) => {
    return httpResource<ComplexParamsResponse>(() => {
        const opts = options ? options() : undefined;
        return opts ? complexParamsRequest(opts) : undefined;
    });
};

export const callWithResultFromHeaderResource = <ThrowOnError extends boolean = false>(options?: () => Options<CallWithResultFromHeaderData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? callWithResultFromHeaderRequest(opts) : undefined;
    });
};

export const testErrorCodeResource = <ThrowOnError extends boolean = false>(options: () => Options<TestErrorCodeData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? testErrorCodeRequest(opts) : undefined;
    });
};

export const nonAsciiæøåÆøÅöôêÊ字符串Resource = <ThrowOnError extends boolean = false>(options: () => Options<NonAsciiæøåÆøÅöôêÊ字符串Data, ThrowOnError> | undefined) => {
    return httpResource<NonAsciiæøåÆøÅöôêÊ字符串Response>(() => {
        const opts = options ? options() : undefined;
        return opts ? nonAsciiæøåÆøÅöôêÊ字符串Request(opts) : undefined;
    });
};

/**
 * Login User
 */
export const putWithFormUrlEncodedResource = <ThrowOnError extends boolean = false>(options: () => Options<PutWithFormUrlEncodedData, ThrowOnError> | undefined) => {
    return httpResource<unknown>(() => {
        const opts = options ? options() : undefined;
        return opts ? putWithFormUrlEncodedRequest(opts) : undefined;
    });
};
