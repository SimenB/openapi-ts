// This file is auto-generated by @hey-api/openapi-ts

import { defineQueryOptions, type UseMutationOptions } from '@pinia/colada';
import { callWithResponseAndNoContentResponse, callWithResponse, type Options, callWithDuplicateResponses, callWithResponses } from '../../sdk.gen';
import type { CallWithDuplicateResponsesData, CallWithDuplicateResponsesError, CallWithDuplicateResponsesResponse, CallWithResponsesData, CallWithResponsesError, CallWithResponsesResponse } from '../../types.gen';
import { client as _heyApiClient } from '../../client.gen';

export const callWithResponseAndNoContentResponseQuery = defineQueryOptions(() => ({
    key: [
        'callWithResponseAndNoContentResponse'
    ],
    query: async () => {
        const { data } = await callWithResponseAndNoContentResponse({ throwOnError: true });
        return data;
    }
}));

export const callWithResponseQuery = defineQueryOptions(() => ({
    key: [
        'callWithResponse'
    ],
    query: async () => {
        const { data } = await callWithResponse({ throwOnError: true });
        return data;
    }
}));

export const callWithDuplicateResponsesMutation = (options?: Partial<Options<CallWithDuplicateResponsesData>>): UseMutationOptions<CallWithDuplicateResponsesResponse, Options<CallWithDuplicateResponsesData>, CallWithDuplicateResponsesError> => {
    return {
        mutation: async (fnOptions) => {
            const { data } = await callWithDuplicateResponses({
                ...options,
                ...fnOptions,
                throwOnError: true
            });
            return data;
        }
    };
};

export const callWithResponsesMutation = (options?: Partial<Options<CallWithResponsesData>>): UseMutationOptions<CallWithResponsesResponse, Options<CallWithResponsesData>, CallWithResponsesError> => {
    return {
        mutation: async (fnOptions) => {
            const { data } = await callWithResponses({
                ...options,
                ...fnOptions,
                throwOnError: true
            });
            return data;
        }
    };
};