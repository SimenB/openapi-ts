// This file is auto-generated by @hey-api/openapi-ts

import { defineQueryOptions, type UseMutationOptions } from '@pinia/colada';
import { serviceWithEmptyTag, type Options, patchApiVbyApiVersionNoTag, fooWow, postApiVbyApiVersionBody } from '../../sdk.gen';
import type { PatchApiVbyApiVersionNoTagData, FooWowData, PostApiVbyApiVersionBodyData, PostApiVbyApiVersionBodyError, PostApiVbyApiVersionBodyResponse } from '../../types.gen';
import { client as _heyApiClient } from '../../client.gen';

export const serviceWithEmptyTagQuery = defineQueryOptions({
    key: [
        'serviceWithEmptyTag'
    ],
    query: async () => {
        const { data } = await serviceWithEmptyTag({ throwOnError: true });
        return data;
    }
});

export const patchApiVbyApiVersionNoTagMutation = (options?: Partial<Options<PatchApiVbyApiVersionNoTagData>>): UseMutationOptions<unknown, Options<PatchApiVbyApiVersionNoTagData>, Error> => {
    return {
        mutation: async (fnOptions) => {
            const { data } = await patchApiVbyApiVersionNoTag({
                ...options,
                ...fnOptions,
                throwOnError: true
            });
            return data;
        }
    };
};

export const fooWowMutation = (options?: Partial<Options<FooWowData>>): UseMutationOptions<unknown, Options<FooWowData>, Error> => {
    return {
        mutation: async (fnOptions) => {
            const { data } = await fooWow({
                ...options,
                ...fnOptions,
                throwOnError: true
            });
            return data;
        }
    };
};

/**
 * Body should not be unknown
 * Body should not be unknown
 */
export const postApiVbyApiVersionBodyMutation = (options?: Partial<Options<PostApiVbyApiVersionBodyData>>): UseMutationOptions<PostApiVbyApiVersionBodyResponse, Options<PostApiVbyApiVersionBodyData>, PostApiVbyApiVersionBodyError> => {
    return {
        mutation: async (fnOptions) => {
            const { data } = await postApiVbyApiVersionBody({
                ...options,
                ...fnOptions,
                throwOnError: true
            });
            return data;
        }
    };
};