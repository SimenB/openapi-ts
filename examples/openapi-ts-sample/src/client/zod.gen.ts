// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zOrder = z.object({
  complete: z.optional(z.boolean()),
  id: z.optional(z.coerce.bigint()),
  petId: z.optional(z.coerce.bigint()),
  quantity: z.optional(z.int()),
  shipDate: z.optional(z.iso.datetime()),
  status: z.optional(z.enum(['placed', 'approved', 'delivered'])),
});

export const zCategory = z.object({
  id: z.optional(z.coerce.bigint()),
  name: z.optional(z.string()),
});

export const zUser = z.object({
  email: z.optional(z.string()),
  firstName: z.optional(z.string()),
  id: z.optional(z.coerce.bigint()),
  lastName: z.optional(z.string()),
  password: z.optional(z.string()),
  phone: z.optional(z.string()),
  userStatus: z.optional(z.int()),
  username: z.optional(z.string()),
});

export const zTag = z.object({
  id: z.optional(z.coerce.bigint()),
  name: z.optional(z.string()),
});

export const zPet = z.object({
  category: z.optional(zCategory),
  id: z.optional(z.coerce.bigint()),
  name: z.string(),
  photoUrls: z.array(z.string()),
  status: z.optional(z.enum(['available', 'pending', 'sold'])),
  tags: z.optional(z.array(zTag)),
});

export const zApiResponse = z.object({
  code: z.optional(z.int()),
  message: z.optional(z.string()),
  type: z.optional(z.string()),
});

export const zPet2 = zPet;

/**
 * List of user object
 */
export const zUserArray = z.array(zUser);

export const zAddPetData = z.object({
  body: zPet,
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

/**
 * Successful operation
 */
export const zAddPetResponse = zPet;

export const zUpdatePetData = z.object({
  body: zPet,
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

/**
 * Successful operation
 */
export const zUpdatePetResponse = zPet;

export const zFindPetsByStatusData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.object({
    status: z.enum(['available', 'pending', 'sold']),
  }),
});

/**
 * successful operation
 */
export const zFindPetsByStatusResponse = z.array(zPet);

export const zFindPetsByTagsData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.object({
    tags: z.array(z.string()),
  }),
});

/**
 * successful operation
 */
export const zFindPetsByTagsResponse = z.array(zPet);

export const zDeletePetData = z.object({
  body: z.optional(z.never()),
  headers: z.optional(
    z.object({
      api_key: z.optional(z.string()),
    }),
  ),
  path: z.object({
    petId: z.coerce.bigint(),
  }),
  query: z.optional(z.never()),
});

export const zGetPetByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    petId: z.coerce.bigint(),
  }),
  query: z.optional(z.never()),
});

/**
 * successful operation
 */
export const zGetPetByIdResponse = zPet;

export const zUpdatePetWithFormData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    petId: z.coerce.bigint(),
  }),
  query: z.optional(
    z.object({
      name: z.optional(z.string()),
      status: z.optional(z.string()),
    }),
  ),
});

/**
 * successful operation
 */
export const zUpdatePetWithFormResponse = zPet;

export const zUploadFileData = z.object({
  body: z.optional(z.string()),
  path: z.object({
    petId: z.coerce.bigint(),
  }),
  query: z.optional(
    z.object({
      additionalMetadata: z.optional(z.string()),
    }),
  ),
});

/**
 * successful operation
 */
export const zUploadFileResponse = zApiResponse;

export const zGetInventoryData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

/**
 * successful operation
 */
export const zGetInventoryResponse = z.record(z.string(), z.int());

export const zPlaceOrderData = z.object({
  body: z.optional(zOrder),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

/**
 * successful operation
 */
export const zPlaceOrderResponse = zOrder;

export const zDeleteOrderData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    orderId: z.coerce.bigint(),
  }),
  query: z.optional(z.never()),
});

export const zGetOrderByIdData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    orderId: z.coerce.bigint(),
  }),
  query: z.optional(z.never()),
});

/**
 * successful operation
 */
export const zGetOrderByIdResponse = zOrder;

export const zCreateUserData = z.object({
  body: z.optional(zUser),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

/**
 * successful operation
 */
export const zCreateUserResponse = zUser;

export const zCreateUsersWithListInputData = z.object({
  body: z.optional(z.array(zUser)),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

/**
 * Successful operation
 */
export const zCreateUsersWithListInputResponse = zUser;

export const zLoginUserData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(
    z.object({
      password: z.optional(z.string()),
      username: z.optional(z.string()),
    }),
  ),
});

/**
 * successful operation
 */
export const zLoginUserResponse = z.string();

export const zLogoutUserData = z.object({
  body: z.optional(z.never()),
  path: z.optional(z.never()),
  query: z.optional(z.never()),
});

export const zDeleteUserData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    username: z.string(),
  }),
  query: z.optional(z.never()),
});

export const zGetUserByNameData = z.object({
  body: z.optional(z.never()),
  path: z.object({
    username: z.string(),
  }),
  query: z.optional(z.never()),
});

/**
 * successful operation
 */
export const zGetUserByNameResponse = zUser;

export const zUpdateUserData = z.object({
  body: z.optional(zUser),
  path: z.object({
    username: z.string(),
  }),
  query: z.optional(z.never()),
});
